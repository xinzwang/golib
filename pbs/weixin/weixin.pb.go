// protoc --go_out=../ weixin.proto
// protoc --go-grpc_out=../   weixin.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.10.0
// source: weixin.proto

package weixin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取接口票据	access_token jsapi_ticket
type TicketType int32

const (
	TicketType_none         TicketType = 0 //未知
	TicketType_access_token TicketType = 1
	TicketType_jsapi_ticket TicketType = 2
)

// Enum value maps for TicketType.
var (
	TicketType_name = map[int32]string{
		0: "none",
		1: "access_token",
		2: "jsapi_ticket",
	}
	TicketType_value = map[string]int32{
		"none":         0,
		"access_token": 1,
		"jsapi_ticket": 2,
	}
)

func (x TicketType) Enum() *TicketType {
	p := new(TicketType)
	*p = x
	return p
}

func (x TicketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketType) Descriptor() protoreflect.EnumDescriptor {
	return file_weixin_proto_enumTypes[0].Descriptor()
}

func (TicketType) Type() protoreflect.EnumType {
	return &file_weixin_proto_enumTypes[0]
}

func (x TicketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketType.Descriptor instead.
func (TicketType) EnumDescriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{0}
}

// 工单
type RepairTaskMode int32

const (
	RepairTaskMode_TASK_MODE_none     RepairTaskMode = 0 // 未知
	RepairTaskMode_TASK_MODE_user     RepairTaskMode = 1 //用户微信添加
	RepairTaskMode_TASK_MODE_engineer RepairTaskMode = 2 // 工程师手动添加
)

// Enum value maps for RepairTaskMode.
var (
	RepairTaskMode_name = map[int32]string{
		0: "TASK_MODE_none",
		1: "TASK_MODE_user",
		2: "TASK_MODE_engineer",
	}
	RepairTaskMode_value = map[string]int32{
		"TASK_MODE_none":     0,
		"TASK_MODE_user":     1,
		"TASK_MODE_engineer": 2,
	}
)

func (x RepairTaskMode) Enum() *RepairTaskMode {
	p := new(RepairTaskMode)
	*p = x
	return p
}

func (x RepairTaskMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepairTaskMode) Descriptor() protoreflect.EnumDescriptor {
	return file_weixin_proto_enumTypes[1].Descriptor()
}

func (RepairTaskMode) Type() protoreflect.EnumType {
	return &file_weixin_proto_enumTypes[1]
}

func (x RepairTaskMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepairTaskMode.Descriptor instead.
func (RepairTaskMode) EnumDescriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{1}
}

// 工单日志
type RepairLogState int32

const (
	RepairLogState_LOG_STATE_wait    RepairLogState = 0 // 待响应
	RepairLogState_LOG_STATE_process RepairLogState = 1 // 处理中
	RepairLogState_LOG_STATE_pending RepairLogState = 2 // 挂起
	RepairLogState_LOG_STATE_out     RepairLogState = 3 // 转出
	RepairLogState_LOG_STATE_close   RepairLogState = 4 // 关闭
)

// Enum value maps for RepairLogState.
var (
	RepairLogState_name = map[int32]string{
		0: "LOG_STATE_wait",
		1: "LOG_STATE_process",
		2: "LOG_STATE_pending",
		3: "LOG_STATE_out",
		4: "LOG_STATE_close",
	}
	RepairLogState_value = map[string]int32{
		"LOG_STATE_wait":    0,
		"LOG_STATE_process": 1,
		"LOG_STATE_pending": 2,
		"LOG_STATE_out":     3,
		"LOG_STATE_close":   4,
	}
)

func (x RepairLogState) Enum() *RepairLogState {
	p := new(RepairLogState)
	*p = x
	return p
}

func (x RepairLogState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepairLogState) Descriptor() protoreflect.EnumDescriptor {
	return file_weixin_proto_enumTypes[2].Descriptor()
}

func (RepairLogState) Type() protoreflect.EnumType {
	return &file_weixin_proto_enumTypes[2]
}

func (x RepairLogState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepairLogState.Descriptor instead.
func (RepairLogState) EnumDescriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{2}
}

type RepairLogMode int32

const (
	RepairLogMode_LOG_MODE_system RepairLogMode = 0 // 系统派单
	RepairLogMode_LOG_MODE_user   RepairLogMode = 1 // 用户指定
	RepairLogMode_LOG_MODE_out    RepairLogMode = 2 // 工程师转交
)

// Enum value maps for RepairLogMode.
var (
	RepairLogMode_name = map[int32]string{
		0: "LOG_MODE_system",
		1: "LOG_MODE_user",
		2: "LOG_MODE_out",
	}
	RepairLogMode_value = map[string]int32{
		"LOG_MODE_system": 0,
		"LOG_MODE_user":   1,
		"LOG_MODE_out":    2,
	}
)

func (x RepairLogMode) Enum() *RepairLogMode {
	p := new(RepairLogMode)
	*p = x
	return p
}

func (x RepairLogMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepairLogMode) Descriptor() protoreflect.EnumDescriptor {
	return file_weixin_proto_enumTypes[3].Descriptor()
}

func (RepairLogMode) Type() protoreflect.EnumType {
	return &file_weixin_proto_enumTypes[3]
}

func (x RepairLogMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepairLogMode.Descriptor instead.
func (RepairLogMode) EnumDescriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{3}
}

type TicketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketType TicketType `protobuf:"varint,1,opt,name=ticket_type,json=ticketType,proto3,enum=weixin.TicketType" json:"ticket_type,omitempty"`
}

func (x *TicketReq) Reset() {
	*x = TicketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketReq) ProtoMessage() {}

func (x *TicketReq) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketReq.ProtoReflect.Descriptor instead.
func (*TicketReq) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{0}
}

func (x *TicketReq) GetTicketType() TicketType {
	if x != nil {
		return x.TicketType
	}
	return TicketType_none
}

type TicketRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket    string `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	ExpiresIn int64  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
}

func (x *TicketRsp) Reset() {
	*x = TicketRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRsp) ProtoMessage() {}

func (x *TicketRsp) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRsp.ProtoReflect.Descriptor instead.
func (*TicketRsp) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{1}
}

func (x *TicketRsp) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *TicketRsp) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type RepairTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type       *RepairTypeInfo `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	UserId     uint32          `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Text       string          `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Urgent     bool            `protobuf:"varint,5,opt,name=urgent,proto3" json:"urgent,omitempty"`
	QrCode     string          `protobuf:"bytes,6,opt,name=qr_code,json=qrCode,proto3" json:"qr_code,omitempty"`
	Pic        []string        `protobuf:"bytes,7,rep,name=pic,proto3" json:"pic,omitempty"`
	CreateDate string          `protobuf:"bytes,8,opt,name=CreateDate,proto3" json:"CreateDate,omitempty"`
	Mode       RepairTaskMode  `protobuf:"varint,9,opt,name=mode,proto3,enum=weixin.RepairTaskMode" json:"mode,omitempty"`
}

func (x *RepairTask) Reset() {
	*x = RepairTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairTask) ProtoMessage() {}

func (x *RepairTask) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairTask.ProtoReflect.Descriptor instead.
func (*RepairTask) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{2}
}

func (x *RepairTask) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RepairTask) GetType() *RepairTypeInfo {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *RepairTask) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RepairTask) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RepairTask) GetUrgent() bool {
	if x != nil {
		return x.Urgent
	}
	return false
}

func (x *RepairTask) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

func (x *RepairTask) GetPic() []string {
	if x != nil {
		return x.Pic
	}
	return nil
}

func (x *RepairTask) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *RepairTask) GetMode() RepairTaskMode {
	if x != nil {
		return x.Mode
	}
	return RepairTaskMode_TASK_MODE_none
}

type RepairTaskDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RepairTaskDetailReq) Reset() {
	*x = RepairTaskDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairTaskDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairTaskDetailReq) ProtoMessage() {}

func (x *RepairTaskDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairTaskDetailReq.ProtoReflect.Descriptor instead.
func (*RepairTaskDetailReq) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{3}
}

func (x *RepairTaskDetailReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 工单分类
type RepairTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RepairTypeInfo) Reset() {
	*x = RepairTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairTypeInfo) ProtoMessage() {}

func (x *RepairTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairTypeInfo.ProtoReflect.Descriptor instead.
func (*RepairTypeInfo) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{4}
}

func (x *RepairTypeInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RepairTypeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RepairType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FatherId   uint32 `protobuf:"varint,3,opt,name=father_id,json=fatherId,proto3" json:"father_id,omitempty"`
	CreateDate string `protobuf:"bytes,4,opt,name=CreateDate,proto3" json:"CreateDate,omitempty"`
	UpdateDate string `protobuf:"bytes,5,opt,name=UpdateDate,proto3" json:"UpdateDate,omitempty"`
	UserId     uint32 `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RepairType) Reset() {
	*x = RepairType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairType) ProtoMessage() {}

func (x *RepairType) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairType.ProtoReflect.Descriptor instead.
func (*RepairType) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{5}
}

func (x *RepairType) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RepairType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RepairType) GetFatherId() uint32 {
	if x != nil {
		return x.FatherId
	}
	return 0
}

func (x *RepairType) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *RepairType) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

func (x *RepairType) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 查询详细信息
type RepairTypeDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RepairTypeDetailReq) Reset() {
	*x = RepairTypeDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairTypeDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairTypeDetailReq) ProtoMessage() {}

func (x *RepairTypeDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairTypeDetailReq.ProtoReflect.Descriptor instead.
func (*RepairTypeDetailReq) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{6}
}

func (x *RepairTypeDetailReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RepairLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId        uint32         `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	EngineerId    uint32         `protobuf:"varint,3,opt,name=engineer_id,json=engineerId,proto3" json:"engineer_id,omitempty"`
	State         RepairLogState `protobuf:"varint,4,opt,name=state,proto3,enum=weixin.RepairLogState" json:"state,omitempty"`
	Mode          RepairLogMode  `protobuf:"varint,5,opt,name=mode,proto3,enum=weixin.RepairLogMode" json:"mode,omitempty"`
	CreateDate    string         `protobuf:"bytes,6,opt,name=CreateDate,proto3" json:"CreateDate,omitempty"`
	StartDate     string         `protobuf:"bytes,7,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	FinishDate    string         `protobuf:"bytes,8,opt,name=FinishDate,proto3" json:"FinishDate,omitempty"`
	ProcessTime   uint32         `protobuf:"varint,9,opt,name=process_time,json=processTime,proto3" json:"process_time,omitempty"`
	Out           uint32         `protobuf:"varint,10,opt,name=out,proto3" json:"out,omitempty"`
	OutReason     string         `protobuf:"bytes,11,opt,name=out_reason,json=outReason,proto3" json:"out_reason,omitempty"`
	PendingReason string         `protobuf:"bytes,12,opt,name=pending_reason,json=pendingReason,proto3" json:"pending_reason,omitempty"`
}

func (x *RepairLog) Reset() {
	*x = RepairLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairLog) ProtoMessage() {}

func (x *RepairLog) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairLog.ProtoReflect.Descriptor instead.
func (*RepairLog) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{7}
}

func (x *RepairLog) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RepairLog) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *RepairLog) GetEngineerId() uint32 {
	if x != nil {
		return x.EngineerId
	}
	return 0
}

func (x *RepairLog) GetState() RepairLogState {
	if x != nil {
		return x.State
	}
	return RepairLogState_LOG_STATE_wait
}

func (x *RepairLog) GetMode() RepairLogMode {
	if x != nil {
		return x.Mode
	}
	return RepairLogMode_LOG_MODE_system
}

func (x *RepairLog) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *RepairLog) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *RepairLog) GetFinishDate() string {
	if x != nil {
		return x.FinishDate
	}
	return ""
}

func (x *RepairLog) GetProcessTime() uint32 {
	if x != nil {
		return x.ProcessTime
	}
	return 0
}

func (x *RepairLog) GetOut() uint32 {
	if x != nil {
		return x.Out
	}
	return 0
}

func (x *RepairLog) GetOutReason() string {
	if x != nil {
		return x.OutReason
	}
	return ""
}

func (x *RepairLog) GetPendingReason() string {
	if x != nil {
		return x.PendingReason
	}
	return ""
}

// 查询详细信息
type RepairLogDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                       // 根据log_id查询
	TaskId uint32 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // 根据task_id查询
}

func (x *RepairLogDetailReq) Reset() {
	*x = RepairLogDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairLogDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairLogDetailReq) ProtoMessage() {}

func (x *RepairLogDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairLogDetailReq.ProtoReflect.Descriptor instead.
func (*RepairLogDetailReq) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{8}
}

func (x *RepairLogDetailReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RepairLogDetailReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// 工单转交
type TaskPassReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId     uint32 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	EngineerId uint32 `protobuf:"varint,2,opt,name=engineer_id,json=engineerId,proto3" json:"engineer_id,omitempty"`
	Reason     string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *TaskPassReq) Reset() {
	*x = TaskPassReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPassReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPassReq) ProtoMessage() {}

func (x *TaskPassReq) ProtoReflect() protoreflect.Message {
	mi := &file_weixin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPassReq.ProtoReflect.Descriptor instead.
func (*TaskPassReq) Descriptor() ([]byte, []int) {
	return file_weixin_proto_rawDescGZIP(), []int{9}
}

func (x *TaskPassReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskPassReq) GetEngineerId() uint32 {
	if x != nil {
		return x.EngineerId
	}
	return 0
}

func (x *TaskPassReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_weixin_proto protoreflect.FileDescriptor

var file_weixin_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x22, 0x40, 0x0a, 0x09, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69,
	0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x42, 0x0a, 0x09, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x22, 0x84, 0x02, 0x0a,
	0x0a, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x69, 0x78,
	0x69, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x52,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x0e, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x87, 0x03, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e,
	0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x4c, 0x6f, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6f, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x12, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x0b, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2a, 0x3a, 0x0a, 0x0a, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x6a, 0x73, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x10, 0x02, 0x2a, 0x50, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x10, 0x02, 0x2a, 0x7a, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f,
	0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x6f, 0x75, 0x74, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x10, 0x04, 0x2a, 0x49, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x4c, 0x6f,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x47, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f,
	0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x4c, 0x4f, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x6f, 0x75, 0x74, 0x10, 0x02, 0x32,
	0x9f, 0x02, 0x0a, 0x0d, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x33, 0x0a, 0x09, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x70, 0x63, 0x12, 0x11,
	0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x70, 0x63, 0x12, 0x1b, 0x2e,
	0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x77, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x70, 0x63, 0x12, 0x1a, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x4c, 0x6f, 0x67, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x70, 0x63, 0x12, 0x1b,
	0x2e, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x77, 0x65,
	0x69, 0x78, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x22,
	0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_weixin_proto_rawDescOnce sync.Once
	file_weixin_proto_rawDescData = file_weixin_proto_rawDesc
)

func file_weixin_proto_rawDescGZIP() []byte {
	file_weixin_proto_rawDescOnce.Do(func() {
		file_weixin_proto_rawDescData = protoimpl.X.CompressGZIP(file_weixin_proto_rawDescData)
	})
	return file_weixin_proto_rawDescData
}

var file_weixin_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_weixin_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_weixin_proto_goTypes = []interface{}{
	(TicketType)(0),             // 0: weixin.TicketType
	(RepairTaskMode)(0),         // 1: weixin.RepairTaskMode
	(RepairLogState)(0),         // 2: weixin.RepairLogState
	(RepairLogMode)(0),          // 3: weixin.RepairLogMode
	(*TicketReq)(nil),           // 4: weixin.TicketReq
	(*TicketRsp)(nil),           // 5: weixin.TicketRsp
	(*RepairTask)(nil),          // 6: weixin.RepairTask
	(*RepairTaskDetailReq)(nil), // 7: weixin.RepairTaskDetailReq
	(*RepairTypeInfo)(nil),      // 8: weixin.RepairTypeInfo
	(*RepairType)(nil),          // 9: weixin.RepairType
	(*RepairTypeDetailReq)(nil), // 10: weixin.RepairTypeDetailReq
	(*RepairLog)(nil),           // 11: weixin.RepairLog
	(*RepairLogDetailReq)(nil),  // 12: weixin.RepairLogDetailReq
	(*TaskPassReq)(nil),         // 13: weixin.TaskPassReq
}
var file_weixin_proto_depIdxs = []int32{
	0,  // 0: weixin.TicketReq.ticket_type:type_name -> weixin.TicketType
	8,  // 1: weixin.RepairTask.type:type_name -> weixin.RepairTypeInfo
	1,  // 2: weixin.RepairTask.mode:type_name -> weixin.RepairTaskMode
	2,  // 3: weixin.RepairLog.state:type_name -> weixin.RepairLogState
	3,  // 4: weixin.RepairLog.mode:type_name -> weixin.RepairLogMode
	4,  // 5: weixin.WeixinService.TicketRpc:input_type -> weixin.TicketReq
	10, // 6: weixin.WeixinService.RepairTypeDetailRpc:input_type -> weixin.RepairTypeDetailReq
	12, // 7: weixin.WeixinService.RepairLogDetailRpc:input_type -> weixin.RepairLogDetailReq
	7,  // 8: weixin.WeixinService.RepairTaskDetailRpc:input_type -> weixin.RepairTaskDetailReq
	5,  // 9: weixin.WeixinService.TicketRpc:output_type -> weixin.TicketRsp
	9,  // 10: weixin.WeixinService.RepairTypeDetailRpc:output_type -> weixin.RepairType
	11, // 11: weixin.WeixinService.RepairLogDetailRpc:output_type -> weixin.RepairLog
	6,  // 12: weixin.WeixinService.RepairTaskDetailRpc:output_type -> weixin.RepairTask
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_weixin_proto_init() }
func file_weixin_proto_init() {
	if File_weixin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_weixin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairTaskDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairTypeDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairLogDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskPassReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_weixin_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_weixin_proto_goTypes,
		DependencyIndexes: file_weixin_proto_depIdxs,
		EnumInfos:         file_weixin_proto_enumTypes,
		MessageInfos:      file_weixin_proto_msgTypes,
	}.Build()
	File_weixin_proto = out.File
	file_weixin_proto_rawDesc = nil
	file_weixin_proto_goTypes = nil
	file_weixin_proto_depIdxs = nil
}
