// protoc --go_out=paths=source_relative:./weixin ./weixin/weixin.proto

syntax = "proto3";
package weixin;
option go_package = "e.coding.net/itdesk/weixin/golib/pbs/weixin";

import "console/user.proto";

// 服务列表
service WeixinService {
	rpc TicketRpc(TicketReq) returns(TicketRsp) {};
	rpc RepairTypeDetailRpc(RepairTypeDetailReq) returns(RepairType) {};
	rpc RepairLogDetailRpc(RepairLogDetailReq) returns (RepairLog) {};
	rpc RepairTaskDetailRpc(RepairTaskDetailReq) returns(RepairTask) {};
}

// 获取接口票据	access_token jsapi_ticket
enum TicketType {
	none = 0;	//未知
	access_token = 1;
	jsapi_ticket = 2;
}
message TicketReq {
	TicketType ticket_type = 1;
}
message TicketRsp {
	string ticket = 1;
	int64 expires_in = 2;
}

// 工单
enum RepairTaskMode {
	TASK_MODE_none = 0;			// 未知
	TASK_MODE_user = 1;			//用户微信添加
	TASK_MODE_engineer = 2;	// 工程师手动添加
}

message RepairTask {
	uint32 id = 1;						// id
	uint32 user_id = 3;				// 用户id
	RepairTypeInfo type = 2;	// 工单分类
	string text = 4;					// 工单内容
	bool urgent = 5;					// 是否紧急
	string qr_code = 6;				// 二维码
	repeated string pic = 7;	// 照片
	string CreateDate  = 8;		// 创建日期
	RepairTaskMode mode = 9;	// 创建方式
}

message RepairTaskDetailReq{
	uint32 id = 1;
}

// 工单列表
message RepairTaskListItem {
	uint32 id = 1;						// id
	console.UserInfo user = 3;				// 用户
	RepairTypeInfo type = 2;	// 工单分类
	string text = 4;					// 工单内容
	bool urgent = 5;					// 是否紧急
	string CreateDate  = 8;		// 创建日期
	RepairTaskMode mode = 9;	// 创建方式
	RepairLogState state = 10;// 工单状态
	console.UserInfo engineer = 11;		// 工程师
}

message RepairTaskListReq {
	uint32 page = 1;
	uint32 limit = 2;
	string sort = 3;
	string content = 4;
	uint32 state = 5;
	uint32 type_id = 6;
}

message RepairTaskListRsp {
	repeated RepairTaskListItem items = 1;
	uint32 total = 2;
}

// 工单分类
message RepairTypeInfo {
	uint32 id = 1;
	string name = 2;
}

message RepairType {
	uint32 id = 1;
	string name = 2;
	uint32 father_id = 3;
	string CreateDate = 4;
	string UpdateDate = 5;
	uint32 user_id = 6;
}

// 查询详细信息
message RepairTypeDetailReq {
	uint32 id = 1;
}


// 工单日志
enum RepairLogState {
	LOG_STATE_wait = 0;			// 待响应
	LOG_STATE_process = 1;	// 处理中
	LOG_STATE_pending = 2; 	// 挂起
	LOG_STATE_out = 3;			// 转出
	LOG_STATE_close = 4;		// 关闭
}
enum RepairLogMode {
	LOG_MODE_system = 0;	// 系统派单
	LOG_MODE_user = 1;		// 用户指定
	LOG_MODE_out = 2;		// 工程师转交
}
enum TaskPassReason {
	TASK_PASS_REASON_none = 0;				// 未知
	TASK_PASS_REASON_wrong_type = 1;	// 分类错误
	TASK_PASS_REASON_busy = 2; 				// 没有时间
	TASK_PASS_REASON_uplevel=3;				// 升级处理
	TASK_PASS_REASON_other = 4; 			// 其它
}
enum TaskPendingReason {
	TASK_PENDING_REASON_none = 0;	// 未知
	TASK_PENDING_REASON_user = 1;	// 用户搁置
	TASK_PENDING_REASON_stop = 2; // 暂停处理
	TASK_PENDING_REASON_pther=3;	// 其它
}

message RepairLog {
	uint32 id = 1;
	uint32 task_id = 2;
	uint32 engineer_id = 3;
	RepairLogState state = 4;
	RepairLogMode mode = 5;
	string CreateDate =6;
	string StartDate = 7;
	string FinishDate = 8;
	uint32 process_time = 9;
	uint32 out = 10;
	TaskPassReason out_reason = 11;
	TaskPendingReason pending_reason = 12;
}


// 查询日志详细信息
message RepairLogDetailReq {
	uint32 id = 1;			// 根据log_id查询
	uint32 task_id = 2; // 根据task_id查询
}

// 工单转交
message TaskPassReq {
	uint32 task_id = 1;
	uint32 engineer_id = 2;
	TaskPassReason reason = 3;
}